#!/bin/bash
PCPATH="/opt/pastecat/"
PCPROG="pastecat"
LOGFILE="/dev/null"
PCUSER="nobody"
PCFILE="/var/run/pc.info"

doInstall() {
	if isInstall
	then
		echo "Pastecat is already installed."
		return
	fi

	# Creating directory and switching
	mkdir -p $PCPATH && cd $PCPATH

	# Aqui s'hauria de fer un switch segons l'arquitectura i descarregar l'adient

    # Getting file
    wget https://github.com/mvdan/pastecat/releases/download/v0.3.0/pastecat_linux_386

	# Changing name so controller can invoke it generically
	mv pastecat_linux_386 pastecat
    chmod +x pastecat

	cd -
}

doServer() {
	# Turning machine into a server

	if [ $# -lt 2 ]
	then
		echo "publish <port> [description] [ip]"
		return
	fi

	local port=${1:-""}
	local description=${2:-""}
	local ip=${3:-"0.0.0.0"}

	# Creating directory with nobody permissions
	mkdir -p "/var/local/pastecat"
	chmod 777 "/var/local/pastecat" && cd "/var/local/pastecat"

	# Running pastecat 
	cmd='su '$PCUSER' -c "{ '$PCPATH$PCPROG' -u http://'$ip':'$port' > '$LOGFILE' 2>&1 & }; echo \$!"'
	pidpc=$(eval $cmd)			# Not sure if necessary to keep PID for now...

	cd -

	# Using the PID, we could carry on process control so if the pastecat process die, we can also
	# stop the avahi process to avoid "false connections"

	# Writting server info to file
	info="$pidpc http://$ip:$port"			# Separator is space character
	echo $info > $PCFILE

	return
}

doStop() {
	# Stopping pastecat server
	pcpid=$(cat $PCFILE | cut -d' ' -f1)
	kill $pcpid

	# Removing info file
	rm $PCFILE
}

isInstalled() {
	[ -d $PCPATH ] && return 0
	return 1
}

doHelp() {
	echo "Controller for the pastecat in Cloudy"
	echo "USAGE: $0 <install|publish|stop>"
	echo "    install"
	echo "    publish <port> [description] [ip]"
	echo "    stop <port>
	return
}

if [ $# -lt 1 ]
then
	doHelp
fi

case $1 in
	"install")
		shift
		doInstall $@
		;;
	"publish")
		shift
		doServer $@
		;;
	"stop")
		shift
		doStop $@
		;;
esac
